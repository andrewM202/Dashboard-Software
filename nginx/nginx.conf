server {
    # Enable Text compression with gunzip, lowers file sizes by 1/10 of what they were
    gzip on;
    gzip_types image/x-icon image/vnd.microsoft.icon text/plain text/json text/html text/css application/javascript application/json;
    gzip_proxied no-cache no-store private expired auth;
    gzip_vary on;
    # gzip_min_length 1000;
    gzip_buffers 16 8k;
    gzip_comp_level 6;

    # Add X-FRAME-Options header to prevent clickjacking (them using iframe
    # to embed my website into theirs, passing it off as their work)
    add_header X-Frame-Options "SAMEORIGIN";

    # Add X-Content-Type header. Marker used by server to indicate that
    # the mime types advertised in the Content-Type headers should be followed
    # and not changed. This header prevents MIME type sniffing
    add_header X-Content-Type-Options nosniff;

    # Add X-XSS-Protection header. This stops pages from loading when
    # browser detect cross-site scripting (XSS) attacks
    add_header "X-XSS-Protection" "1; mode=block";

    # Add Referrer-Policy header. Referrer policy is used to
    # maintain the security and privacy of source account
    # while fetching resources or performing navigation.
    add_header 'Referrer-Policy' 'origin';

    # Our nginx server lives on port 80
    listen 80;

    # The host address is server_name
    server_name ${NGINX_HOST};

    # Proxy our nginx traffic on listen port 80 to our flask app on port 8000
    location / {
        proxy_pass http://app:8000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
    }
}

# SSL server configuration
server {
    # Enable Text compression with gunzip, lowers file sizes by 1/10 of what they were
    gzip on;
    gzip_vary on;
    gzip_types image/x-icon image/vnd.microsoft.icon text/plain text/html text/css application/javascript application/json;
    gzip_proxied no-cache no-store private expired auth;
    # gzip_min_length 1000;

    # Add strong content security policy (CSP) to prevent XSS attacks
    # XSS = cross site scripting
    # add_header Content-Security-Policy "default-src 'self';";
    # add_header Content-Security-Policy: "img-src *; media-src *; script-src *;";

    # Add X-FRAME-Options header to prevent clickjacking (them using iframe
    # to embed my website into theirs, passing it off as their work)
    add_header X-Frame-Options "SAMEORIGIN";

    # Add X-Content-Type header. Marker used by server to indicate that
    # the mime types advertised in the Content-Type headers should be followed
    # and not changed. This header prevents MIME type sniffing
    add_header X-Content-Type-Options nosniff;

    # Add X-XSS-Protection header. This stops pages from loading when
    # browser detect cross-site scripting (XSS) attacks
    add_header "X-XSS-Protection" "1; mode=block";

    # Add Referrer-Policy header. Referrer policy is used to
    # maintain the security and privacy of source account
    # while fetching resources or performing navigation.
    add_header 'Referrer-Policy' 'origin';

    # Strict Transport Security (HSTS) Header. This header
    # forces clients to connect through HTTPS, no choice
    # add_header Strict-Transport-Security: "max-age=31536000; includeSubDomains;";

    listen 443 ssl http2;
    server_name ${NGINX_HOST};
    ssl_certificate /etc/nginx/certs/ssl.crt;
    ssl_certificate_key /etc/nginx/certs/ssl.key;
    location / {
        proxy_pass http://app:8000;

        # proxy_set_header   Host                 $host;
        # proxy_set_header   X-Real-IP            $remote_addr;
        # proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
        # proxy_set_header   X-Forwarded-Proto    $scheme;
    }
}